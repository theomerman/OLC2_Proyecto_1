
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftDIVIDETIMESAND BOOL BREAK CASE CHAR CHAR_LEX COLON COMMA COMMENT COMMENT2 COMPARASION CONSOLE CONST CONTINUE DEFAULT DIFFERENT DIVIDE DOT ELSE EQUAL FALSE FLOAT FLOAT_LEX FOR FUNCTION GREATER GREATER_EQUAL ID IF INDEXOF INTERFACE JOIN KEYS LBRACE LBRACKET LENGTH LESS LESS_EQUAL LOG LPAREN MINUS MOD NOT NULL NUMBER NUMBER_LEX OBJECT OF OR PARSEFLOAT PARSEINT PLUS POP PUSH RBRACE RBRACKET RETURN RPAREN SEMICOLON STRING STRING_LEX SWITCH TERNARY TIMES TOLOWERCASE TOSTRING TOUPPERCASE TRUE TYPEOF VALUES VAR WHILEinit : init instruction\n            | instructioninstruction  : NUMBER_LEX STRING_LEX SEMICOLON \n    '
    
_lr_action_items = {'NUMBER_LEX':([0,1,2,4,6,],[3,3,-2,-1,-3,]),'$end':([1,2,4,6,],[0,-2,-1,-3,]),'STRING_LEX':([3,],[5,]),'SEMICOLON':([5,],[6,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instruction':([0,1,],[2,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> init instruction','init',2,'p_init','parser.py',59),
  ('init -> instruction','init',1,'p_init','parser.py',60),
  ('instruction -> NUMBER_LEX STRING_LEX SEMICOLON','instruction',3,'p_instruction','parser.py',62),
]
